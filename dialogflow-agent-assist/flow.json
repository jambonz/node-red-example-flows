[{
	"id": "b7186bc3.26d27",
	"type": "tab",
	"label": "voicebot example",
	"disabled": false,
	"info": ""
}, {
	"id": "7264e1f3.1b4e38",
	"type": "webhook out",
	"z": "b7186bc3.26d27",
	"name": "",
	"x": 830,
	"y": 60,
	"wires": []
}, {
	"id": "6813c91b.2a327",
	"type": "dialogflow",
	"z": "b7186bc3.26d27",
	"name": "",
	"recognizerlang": "en-US",
	"serviceAccountCredentials": "{\"foo\": \"bar\"}",
	"serviceAccountCredentialsType": "json",
	"project": "ai-in-rtc-drachtio-tljjpn",
	"projectType": "str",
	"welcomeEvent": "Welcome",
	"welcomeEventType": "str",
	"welcomeEventParams": "",
	"welcomeEventParamsType": "json",
	"passDtmf": false,
	"inputTimeout": "",
	"inputTimeoutType": "num",
	"noInputEvent": "",
	"noInputEventType": "str",
	"eventHook": "/voice-bot-events",
	"eventHookType": "str",
	"actionHook": "/voice-bot-action",
	"actionHookType": "str",
	"evtAll": true,
	"evtIntent": false,
	"evtTranscript": false,
	"evtInterimTranscript": false,
	"evtDtmf": false,
	"evtEndUtterance": false,
	"evtStartPlay": false,
	"evtEndPlay": false,
	"evtNoInput": false,
	"x": 460,
	"y": 40,
	"wires": [
		["7264e1f3.1b4e38"]
	]
}, {
	"id": "7cf7da64.7f135c",
	"type": "webhook in",
	"z": "b7186bc3.26d27",
	"name": "",
	"url": "/voice-bot-action",
	"method": "post",
	"x": 120,
	"y": 260,
	"wires": [
		["7264e1f3.1b4e38", "955c4523.c69958"]
	]
}, {
	"id": "90812b09.87aab",
	"type": "webhook in",
	"z": "b7186bc3.26d27",
	"name": "",
	"url": "/voicebot",
	"method": "post",
	"x": 130,
	"y": 40,
	"wires": [
		["6813c91b.2a327", "b5adc15c.630968"]
	]
}, {
	"id": "104613cb.4e115c",
	"type": "webhook in",
	"z": "b7186bc3.26d27",
	"name": "",
	"url": "/voice-bot-events",
	"method": "post",
	"x": 120,
	"y": 440,
	"wires": [
		["fc545555.5be568", "de2f1f56.e6fdf8"]
	]
}, {
	"id": "fc545555.5be568",
	"type": "function",
	"z": "b7186bc3.26d27",
	"name": "look for call transfer",
	"func": "if (msg.call.event === 'intent') {\n    const qo = msg.call.data.query_result;\n    const transfer = qo.fulfillment_messages.find((fm) => fm.platform === 'TELEPHONY' && fm.telephony_transfer_call);\n    if (transfer) {\n        msg.transferTo = transfer.telephony_transfer_call.phone_number;\n    }\n}\nreturn msg;\n",
	"outputs": 1,
	"noerr": 0,
	"x": 380,
	"y": 440,
	"wires": [
		["e76ef718.e2d5a8"]
	]
}, {
	"id": "e76ef718.e2d5a8",
	"type": "switch",
	"z": "b7186bc3.26d27",
	"name": "",
	"property": "transferTo",
	"propertyType": "msg",
	"rules": [{
		"t": "istype",
		"v": "string",
		"vt": "string"
	}, {
		"t": "else"
	}],
	"checkall": "true",
	"repair": false,
	"outputs": 2,
	"x": 570,
	"y": 440,
	"wires": [
		["90016a6d.b27d08"],
		["7264e1f3.1b4e38"]
	]
}, {
	"id": "90016a6d.b27d08",
	"type": "say",
	"z": "b7186bc3.26d27",
	"name": "",
	"text": "Please hold while we transfer your call",
	"early": false,
	"loop": 1,
	"vendor": "default",
	"lang": "default",
	"voice": "default",
	"x": 750,
	"y": 440,
	"wires": [
		["1fd18396.1c6e7c"]
	]
}, {
	"id": "1fd18396.1c6e7c",
	"type": "dial",
	"z": "b7186bc3.26d27",
	"name": "",
	"targets": [{
		"type": "phone",
		"varType": "msg",
		"dest": "transferTo"
	}],
	"headers": [],
	"actionhook": "",
	"actionhookType": "str",
	"answeronbridge": false,
	"callerid": "3397076136",
	"calleridType": "str",
	"confirmhook": "",
	"confirmhookType": "str",
	"dialmusic": "",
	"dialmusicType": "str",
	"dtmfcapture": "",
	"dtmfcaptureType": "str",
	"dtmfhook": "",
	"dtmfhookType": "str",
	"timelimit": "",
	"timeout": "",
	"listenurl": "",
	"listenurlType": "str",
	"transcribeurl": "",
	"transcribeurlType": "str",
	"interim": false,
	"transcribelang": "en-US",
	"x": 890,
	"y": 440,
	"wires": [
		["7264e1f3.1b4e38"]
	]
}, {
	"id": "b5adc15c.630968",
	"type": "function",
	"z": "b7186bc3.26d27",
	"name": "add call",
	"func": "const calls = flow.get('calls') || [];\ncalls.push({\n    uuid: msg.call.callSid,\n    start: Date.now(),\n    callingNumber: msg.call.from,\n    calledNumber: msg.call.to,\n    status: 'in-progress'\n})\nflow.set('calls', calls);\nmsg.payload = JSON.stringify({\n    type: 'calls',\n    data: calls\n});\nreturn msg;",
	"outputs": 1,
	"noerr": 0,
	"x": 140,
	"y": 120,
	"wires": [
		["7723daf8.12e184"]
	]
}, {
	"id": "7723daf8.12e184",
	"type": "websocket out",
	"z": "b7186bc3.26d27",
	"name": "",
	"server": "6c113d60.c887b4",
	"client": "",
	"x": 410,
	"y": 120,
	"wires": []
}, {
	"id": "955c4523.c69958",
	"type": "function",
	"z": "b7186bc3.26d27",
	"name": "remove call",
	"func": "const calls = flow.get('calls')\n    .filter((c) => c.uuid !== msg.call.callSid);\nflow.set('calls', calls);\nmsg.payload = JSON.stringify({\n    type: 'calls',\n    data: calls\n});\nreturn msg;",
	"outputs": 1,
	"noerr": 0,
	"x": 170,
	"y": 340,
	"wires": [
		["7723daf8.12e184"]
	]
}, {
	"id": "fc075e89.3024b8",
	"type": "inject",
	"z": "b7186bc3.26d27",
	"name": "",
	"topic": "",
	"payload": "",
	"payloadType": "date",
	"repeat": "",
	"crontab": "",
	"once": true,
	"onceDelay": 0.1,
	"x": 90,
	"y": 1120,
	"wires": [
		["b5a40335.687de"]
	]
}, {
	"id": "b5a40335.687de",
	"type": "function",
	"z": "b7186bc3.26d27",
	"name": "initialize calls",
	"func": "flow.set('calls', []);\nreturn msg;",
	"outputs": 1,
	"noerr": 0,
	"x": 290,
	"y": 1120,
	"wires": [
		[]
	]
}, {
	"id": "de2f1f56.e6fdf8",
	"type": "switch",
	"z": "b7186bc3.26d27",
	"name": "",
	"property": "call.event",
	"propertyType": "msg",
	"rules": [{
		"t": "eq",
		"v": "intent",
		"vt": "str"
	}, {
		"t": "eq",
		"v": "transcription",
		"vt": "str"
	}],
	"checkall": "true",
	"repair": false,
	"outputs": 2,
	"x": 330,
	"y": 660,
	"wires": [
		["6ca74661.8b2738"],
		["ba11e6ba.c29d8"]
	]
}, {
	"id": "6ca74661.8b2738",
	"type": "function",
	"z": "b7186bc3.26d27",
	"name": "parse intent",
	"func": "const intent = msg.call.data.query_result ?\n    msg.call.data.query_result.query_text :\n    'empty intent';\nmsg.payload = JSON.stringify({\n    type: 'intent',\n    date: Date.now(),\n    uuid: Date.now(),\n    callUUID: msg.call.callSid,\n    data: intent\n})\nreturn msg;",
	"outputs": 1,
	"noerr": 0,
	"x": 510,
	"y": 640,
	"wires": [
		["7723daf8.12e184", "c4667a47.4b597"]
	]
}, {
	"id": "ba11e6ba.c29d8",
	"type": "function",
	"z": "b7186bc3.26d27",
	"name": "parse transcript",
	"func": "msg.payload = JSON.stringify({\n    type: 'transcript',\n    date: Date.now(),\n    uuid: Date.now(),\n    callUUID: msg.call.callSid,\n    data: {\n        text: msg.call.data.recognition_result.transcript,\n        confidence: msg.call.data.recognition_result.confidence\n    }\n})\nreturn msg;",
	"outputs": 1,
	"noerr": 0,
	"x": 520,
	"y": 720,
	"wires": [
		["7723daf8.12e184"]
	]
}, {
	"id": "c4667a47.4b597",
	"type": "function",
	"z": "b7186bc3.26d27",
	"name": "parse prompt",
	"func": "const prompt = msg.call.data.query_result ?\n    msg.call.data.query_result.fulfillment_text :\n    'no prompt';\nmsg.payload = JSON.stringify({\n    type: 'prompt',\n    date: Date.now(),\n    uuid: Date.now(),\n    callUUID: msg.call.callSid,\n    data: prompt\n})\nreturn msg;",
	"outputs": 1,
	"noerr": 0,
	"x": 740,
	"y": 640,
	"wires": [
		["7723daf8.12e184"]
	]
}, {
	"id": "6c113d60.c887b4",
	"type": "websocket-listener",
	"z": "",
	"path": "/voicebot-event-streamer",
	"wholemsg": "false"
}]